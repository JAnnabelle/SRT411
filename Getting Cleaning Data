Part 1:

install(swirl)
install.packages(swirl)
install.packages("swirl")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl
swirl()
?read.csv
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
info()
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
libary(dplyr)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
select
select()
''
?select
select(cran, ip_id, packagem country)
select(cran, ip_id, package country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
select(cran)
crn
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(5:20))
select(cran, -(x:size))
select(cran, -(time:size))
info()
select(cran, -(time:size))
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, x:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version =< "3.0.2", country == "IN")
filter(cran, r_version =< 3.0.2, country == "IN")
filter(cran, r_version <= 3.0.2, country == "IN")
filter(cran, r_version <= "3.0.2"", country == "IN")
filter(cran, r_version <= "3.0.2"", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500)
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, size > 100500, r_os == "linux-gnu", !is.na(c(3, 5, NA, 10)))
filter(cran, size > 100500, r_os == "linux-gnu", !is.na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(crn, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version, ip_id))
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/ 2^20)
mutate(cran3, size_gb== = size/ 2^10)
mutate(cran3, size_gb == size/ 2^10)
mutate(cran3, size_gb== size/ 2^10)
mutate(cran3, size_gb = size/ 2^10)
mutate(cran3, size_mb = size/ 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))

Part 2:

swirl()
library(dplyr)
cran <- tbl_df()
cran <- tbl_df(mydf)
rm('mydf')
cran
group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
avg_bytes = )
count = n(X),
unique = ,
avg_bytes = mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts  <- filter(pack_sum, count > 679)
top_counts
view(top_counts
View(top_counts
View(top_counts
)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_Sum,)
filter(pack_Sum, unique)
top_unique <- filter(pack_Sum, unique)
top_unique <- filter(pack_sum, unique)
top_unique <- filter(pack_sum, )
top_unique <- filter(pack_sum)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
reset()
reset()
submit()
submit()
submit()
submit()
submit()
submit()

Part 3:

library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, column)
students2-count
gather(students2, sex_class, column_count)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = rs, col = sex_class into c("sex", "class"))
separate(data = res, col = sex_class into c("sex", "class"))
separate(data = res, col = sex_class, into c("sex", "class"))
separate(data = res, col = sex_class, into c("sex", "class")
separate(data = res, col = sex_class, into c("sex", "class"))
separate(data = res, col = sex_class, into ("sex", "class"))
separate(data = res, col = sex_class, into "sex", "class")
separate(data = res, col = sex_class, into "sex" "class")
separate(data = res, col = sex_class = c("sex", "class"))
separate(data = res, sex_class = c("sex", "class"))
separate(res, sex_class = c("sex", "class"))
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
submit()
students3
submit
submit()
reset()
submit()
submit()
submit()
submit()
info()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
reset()
submit()
reset()
reset()
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?mutate
library("dplyr")
?mutate
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(status = "passed")
mutate(status = passed)
mutate
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
?separate
?separate
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
View(res)
View(sat)
View(sat)
submit()
rese()
reset()
submit()
View(sat)
submit()
submit()
submit()
submit()

Part 4:

sys.getlocale('LC_TIME')
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=true)
wday(this_day, label = TRUE)
this_moment <- now(tzone = )
this_moment
hour(this_moment)
my_Date <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989-05-17")
ymdd("1989 May 17")
ymd("1989 May 17")
?ymd
ymd("March 12, 1975")
mdy("March 12, 1975")
myd("25091985")
dmy("25091985")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1920/1/2")
dtl
dti
dt1
ymd_hms(dt1)
time
hmd(:03:22:14)
hmd("03:22:14)
hmd("03:22:14)
hmd("03:22:14")
hms("03:22:14")
dt2
ymd_hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes =34, seconds = 55)
this_moment
update
update(this_moment, hours = 10, minutes = 16, seconds =0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nys <- now(tzone = America/New_York)
nys <- now(tzone = America/New_York)
nyc <- now(tzone = America/New_York)
nyc <- now(tzone = America/New_York)
nyc <- now(tzone = New_York)
?now
nyc <- now(America/New_York)
nyc <- now(tzone = "America/New_York"")
nyc <- now(tzone = "America/New_York"")
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone="Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
